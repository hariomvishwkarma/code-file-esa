{{ 'customer.css' | asset_url | stylesheet_tag }}
<style>
  .password-wrapper {
  position: relative;
}
.password-wrapper input {
  width: 100%;
  padding-right: 2.5rem;
}
.toggle-password {
  position: absolute !important;
  top: 50%;
  right: 1rem;
  transform: translateY(-50%);
  background: none;
  border: none;
  cursor: pointer;
  padding: 0;
}
.icon-eye {
  width: 20px;
  height: 20px;
  color: #555;
}

</style>
<div class="customer customer--box register color-secondary">
  <div class="header--intro center">
    <div class="header--head">
      <h1 class="h3">
        {{ 'customer.register.title' | t }}
      </h1>
    </div>
  </div>
  {%- form 'create_customer' -%}
    {%- if form.errors.messages.form != blank -%}
      <legend class="theme--error-message special--medium message__field">{% render 'theme-icons', icon: 'warning' %}{{ form.errors.messages.form }}</legend>
    {%- endif -%}
    <div class="field">
      <label for="RegisterForm-FirstName" class="hide">
        {{ 'customer.register.first_name' | t }}
      </label>
      <input
        type="text"
        name="customer[first_name]"
        id="RegisterForm-FirstName"
        {% if form.first_name %}
          value="{{ form.first_name }}"
        {% endif %}
        autocomplete="given-name"
        placeholder="{{ 'customer.register.first_name' | t }}"
        required
      >
    </div>
    <div class="field">
      <label for="RegisterForm-LastName" class="hide">
        {{ 'customer.register.last_name' | t }}
      </label>
      <input
        type="text"
        name="customer[last_name]"
        id="RegisterForm-LastName"
        {% if form.last_name %}
          value="{{ form.last_name }}"
        {% endif %}
        autocomplete="family-name"
        placeholder="{{ 'customer.register.last_name' | t }}"
      >
    </div>
    <div class="field">
      <label for="RegisterForm-email" class="hide">
        {{ 'customer.register.email' | t }}
      </label>
      <input
        type="email"
        name="customer[email]"
        id="RegisterForm-email"
        {% if form.email %}
          value="{{ form.email }}"
        {% endif %}
        spellcheck="false"
        autocapitalize="off"
        autocomplete="email"
        aria-required="true"
        {% if form.errors contains 'email' %}
          aria-invalid="true"
          aria-describedby="RegisterForm-email-error"
        {% endif %}
        placeholder="{{ 'customer.register.email' | t }}"
        required
      >
    </div>
    
    {%- if form.errors contains 'email' -%}
      <legend class="theme--error-message special--medium email__field">
        {% render 'theme-icons', icon: 'warning' %}
        {{ form.errors.translated_fields.email | capitalize }}
        {{ form.errors.messages.email }}.
      </legend>
    {%- endif -%}
    <div class="field">
      <label for="RegisterForm-password" class="hide">
        {{ 'customer.register.password' | t }}
      </label>
      <input
        type="password"
        name="customer[password]"
        id="RegisterForm-password"
        aria-required="true"
        {% if form.errors contains 'password' %}
          aria-invalid="true"
          aria-describedby="RegisterForm-password-error"
        {% endif %}
        placeholder="{{ 'customer.register.password' | t }}"
        required
      >
      <button type="button" class="toggle-password" data-target="RegisterForm-password" aria-label="Toggle password visibility">
      <svg class="icon-eye" xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.477 0 8.268 2.943 9.542 7-1.274 4.057-5.065 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
      </svg>
    </button>
    </div>
    <div class="field">
      <label for="RegisterForm-password" class="hide">
        {{ 'customer.register.password' | t }}
      </label>
      <input
        type="password"
        name="customer[confirm-password]"
        id="RegisterForm-confirm-password"
        aria-required="true"
        {% if form.errors contains 'password' %}
          aria-invalid="true"
          aria-describedby="RegisterForm-confirm-password-error"
        {% endif %}
        placeholder="Confirm password"
        required
      >
        <button type="button" class="toggle-password" data-target="RegisterForm-confirm-password" aria-label="Toggle password visibility">
          <svg class="icon-eye" xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.477 0 8.268 2.943 9.542 7-1.274 4.057-5.065 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
          </svg>
        </button>
    </div>
    {%- if form.errors contains 'password' -%}
      <legend class="theme--error-message special--medium password__field">
        {% render 'theme-icons', icon: 'warning' %}
        {{ form.errors.translated_fields.password | capitalize }}
        {{ form.errors.messages.password }}.
      </legend>
    {%- endif -%}
    <button type="submit" class="btn btn--primary">
      {{ 'customer.register.submit' | t }}  {% render 'theme-icons', icon: 'arrow-up-right' %}
    </button>
    <p class="customer-redirect__link">{{ 'customer.register.login_html' | t: link: routes.account_login_url }}</p>
  {%- endform -%}
</div>

{% schema %}
{
  "name": "t:sections.main-register.name"
}
{% endschema %}
<script>
  var password = document.getElementById("RegisterForm-password"),
      confirm_password = document.getElementById("RegisterForm-confirm-password");

  function validatePassword(){
    if(password.value !== confirm_password.value) {
      confirm_password.setCustomValidity("Passwords don't match");
    } else {
      confirm_password.setCustomValidity('');
    }
  }

  password.onchange = validatePassword;
  confirm_password.onkeyup = validatePassword;

  document.querySelectorAll('.toggle-password').forEach(function(button) {
    button.addEventListener('click', function() {
      const input = document.getElementById(this.dataset.target);
      const isPassword = input.type === "password";
      input.type = isPassword ? "text" : "password";

      // Optional: Swap eye to eye-off icon
      this.innerHTML = isPassword
        ? `<svg class="icon-eye" xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="none" viewBox="0 0 24 24" stroke="currentColor">
             <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.875 18.825A10.05 10.05 0 0112 19c-4.477 0-8.268-2.943-9.542-7a10.05 10.05 0 012.512-4.043M9.88 9.88a3 3 0 104.24 4.24M3 3l18 18" />
             <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
             <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.477 0 8.268 2.943 9.542 7-1.274 4.057-5.065 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
           </svg>`
        : `<svg class="icon-eye" xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="none" viewBox="0 0 24 24" stroke="currentColor">
             <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
             <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.477 0 8.268 2.943 9.542 7-1.274 4.057-5.065 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
           </svg>`;
    });
  });
</script>

