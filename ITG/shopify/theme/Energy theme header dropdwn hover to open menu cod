Energy theme header dropdwn hover to open menu code

document.querySelectorAll('[id^="Details-"] summary').forEach((summary) => {
  summary.setAttribute('role', 'button');
  summary.setAttribute('aria-expanded', summary.parentNode.hasAttribute('open'));

  if (summary.nextElementSibling.getAttribute('id')) {
    summary.setAttribute('aria-controls', summary.nextElementSibling.id);
  }

  summary.addEventListener('click', (event) => {
    event.currentTarget.setAttribute('aria-expanded', !event.currentTarget.closest('details').hasAttribute('open'));
  });

  if (summary.closest('header-drawer, menu-drawer')) return;
  summary.parentElement.addEventListener('keyup', onKeyUpEscape);
});

Update this code 
document.querySelectorAll('[id^="Details-"] summary').forEach((summary) => {
  summary.setAttribute('role', 'button');
  summary.setAttribute('aria-expanded', summary.parentNode.hasAttribute('open'));

  if (summary.nextElementSibling.getAttribute('id')) {
    summary.setAttribute('aria-controls', summary.nextElementSibling.id);
  }
  // For hover 
  if (window.matchMedia('(min-width: 990px)').matches) {
     let timeoutId; // To track the timeout for each dropdown
  
    summary.addEventListener('mouseenter', (event) => {
      clearTimeout(timeoutId); // Clear any pending timeout to prevent premature closing
      const details = event.currentTarget.closest('details');
      details.setAttribute('open', ''); // Opens the details element
      event.currentTarget.setAttribute('aria-expanded', true); // Update aria-expanded to true
    });
  
    summary.addEventListener('mouseleave', (event) => {
      const details = event.currentTarget.closest('details');
      const megaMenu = details.querySelector('.mega-menu__content'); // Scope to current details
  
      // Check if the cursor is over the mega-menu__content before closing
      const checkIfInMegaMenu = (event) => {
        if (!megaMenu) return false; // Ensure megaMenu exists
        const rect = megaMenu.getBoundingClientRect();
        return (
          event.clientX >= rect.left &&
          event.clientX <= rect.right &&
          event.clientY >= rect.top &&
          event.clientY <= rect.bottom
        );
      };
  
      timeoutId = setTimeout(() => {
        const handleMouseMove = (moveEvent) => {
          if (!checkIfInMegaMenu(moveEvent)) {
            details.removeAttribute('open'); // Close the details element if not in mega menu
            summary.setAttribute('aria-expanded', false); // Update aria-expanded to false
            document.removeEventListener('mousemove', handleMouseMove); // Remove listener
          }
        };
  
        document.addEventListener('mousemove', handleMouseMove);
      }, 300); // Delay of 300ms before closing
    });
  }

  // summary.addEventListener('click', (event) => {
  //   event.currentTarget.setAttribute('aria-expanded', !event.currentTarget.closest('details').hasAttribute('open'));
  // });

  if (summary.closest('header-drawer, menu-drawer')) return;
  summary.parentElement.addEventListener('keyup', onKeyUpEscape);
});