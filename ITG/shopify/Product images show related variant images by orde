Product images show related variant images by order. Product variant images order me rakhne par 
{%- assign current_variant_title = '' -%}
{%- for media in product.media -%}
{%- for option in product.options_with_values -%}
  {% assign swatch_option_key = 'option' | append: forloop.index %}
  {%- for value in option.values -%}
    {% assign optionname =  option.name | downcase %}
    {% if optionname == 'color' or optionname == 'colour' %}
      {% assign swatch_value_downcased = value | downcase %}
      {% for variant in product.variants %}
        {% assign option_value_downcased = variant[swatch_option_key] | downcase %}
        {% if option_value_downcased == swatch_value_downcased %}
          {% if variant.image != blank %}
            {%- if variant.image and variant.image.src == media.preview_image.src -%}
              {%- assign current_variant_title = value -%}
              {%- break -%}
            {%- endif -%}
          {% endif %}
          {%- break -%}
        {% endif %}
      {% endfor %}
    {% endif %}
  {% endfor %}
{%- endfor -%}
<li
  data-variant-title="{{ current_variant_title }}"
  data-image-swatch="{{ media.preview_image | image_url: 'width: 50' }}"
  id="Slide-{{ section.id }}-{{ media.id }}{{ id_append }}"
  class="product__media-item grid__item slider__slide{% if single_media_visible %} product__media-item--single{% endif %}{% if product.selected_or_first_available_variant.featured_media == null and forloop.index == 1 %} is-active{% endif %}{% if media.media_type != 'image' %} product__media-item--full{% endif %}{% if section.settings.gallery_layout == 'hide_variants' and variant_images contains media.src %} product__media-item--variant{% endif %}"
  data-media-id="{{ section.id }}-{{ media.id }}"
  media-position="{{ forloop.index }}"
></li>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const variantOptions = document.querySelectorAll('[data-product-variant-option]');
    const mediaItems = document.querySelectorAll('.product__media-item');

    // Helper function to update images based on variant
    function updateGalleryImages(selectedTitle) {
      mediaItems.forEach(item => {
        const itemTitle = item.getAttribute('data-variant-title');

        if (itemTitle === selectedTitle) {
          item.classList.remove('hidden');
          item.classList.add('active'); // Optional, for visual styling
        } else {
          item.classList.add('hidden');
          item.classList.remove('active');
        }
      });
    }

    // On change
    variantOptions.forEach(option => {
      option.addEventListener('change', function () {
        const selectedTitle = this.getAttribute('data-variant-title');
        if (selectedTitle) {
          updateGalleryImages(selectedTitle);
        }
      });
    });

    // On page load
    const selected = document.querySelector('[data-product-variant-option]:checked');
    if (selected) {
      const selectedTitle = selected.getAttribute('data-variant-title');
      if (selectedTitle) {
        updateGalleryImages(selectedTitle);
      }
    }
    // JavaScript
    const activeItems = document.querySelectorAll('.product__media-item.active');
    if (activeItems.length > 0) {
      activeItems[0].classList.add('first-active');
    }
  });
</script>


.product__media-item.active.first-active {
    max-width: 100% !important;
    width: 100% !important;
}